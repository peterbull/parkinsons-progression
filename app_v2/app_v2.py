# AUTOGENERATED! DO NOT EDIT! File to edit: ../pb_parkinsons_progression_1.ipynb.

# %% auto 0
__all__ = ['comp', 'path', 'train_peptides', 'train_proteins', 'train_clinical_data', 'supplemental_clinical_data',
           'combined_clinical_data', 'cat_names', 'cont_names', 'procs', 'to', 'preprocessed_data', 'peptide_agg',
           'merged_protein_data', 'merged_data']

# %% ../pb_parkinsons_progression_1.ipynb 1
from fastai.tabular.all import *

import seaborn as sns

import tqdm

pd.options.display.max_rows = 20
pd.options.display.max_columns = 8

# %% ../pb_parkinsons_progression_1.ipynb 2
try: import fastkaggle
except ModuleNotFoundError:
    !pip install -Uq fastkaggle

from fastkaggle import *

# %% ../pb_parkinsons_progression_1.ipynb 4
comp = 'amp-parkinsons-disease-progression-prediction'
path = setup_comp(comp, install='fastai')

# %% ../pb_parkinsons_progression_1.ipynb 7
train_peptides = pd.read_csv(path/'train_peptides.csv')
train_proteins = pd.read_csv(path/'train_proteins.csv')
train_clinical_data = pd.read_csv(path/'train_clinical_data.csv')
supplemental_clinical_data = pd.read_csv(path/'supplemental_clinical_data.csv')

# %% ../pb_parkinsons_progression_1.ipynb 9
# Combine train_clinical_data and supplemental_clinical_data
combined_clinical_data = pd.concat([train_clinical_data, supplemental_clinical_data], ignore_index=True)

# %% ../pb_parkinsons_progression_1.ipynb 10
# Define categorical and continuous variable columns
cat_names = ['patient_id', 'upd23b_clinical_state_on_medication']
cont_names = ['visit_month', 'updrs_1', 'updrs_2', 'updrs_3', 'updrs_4']

# %% ../pb_parkinsons_progression_1.ipynb 11
# Define the preprocessing steps
procs = [Categorify, FillMissing, Normalize]

# %% ../pb_parkinsons_progression_1.ipynb 12
# Create a TabularPandas object
to = TabularPandas(combined_clinical_data, procs, cat_names, cont_names, splits=None)

# %% ../pb_parkinsons_progression_1.ipynb 13
# Apply the preprocessing steps
preprocessed_data = to.train.xs.reset_index(drop=True)

# %% ../pb_parkinsons_progression_1.ipynb 14
# Check the preprocessed data
preprocessed_data.head()


# %% ../pb_parkinsons_progression_1.ipynb 16
# Aggregate peptide data by visit_id, UniProt, and visit_month
peptide_agg = train_peptides.groupby(['visit_id', 'UniProt', 'visit_month']).agg({'PeptideAbundance': 'sum'}).reset_index()

# %% ../pb_parkinsons_progression_1.ipynb 17
# Merge aggregated peptide data with protein data
merged_protein_data = train_proteins.merge(peptide_agg, on=['visit_id', 'UniProt', 'visit_month'], how='left')

# %% ../pb_parkinsons_progression_1.ipynb 19
# Calculate the ratio of peptide abundance to NPX
merged_protein_data['Peptide_NPX_ratio'] = merged_protein_data['PeptideAbundance'] / merged_protein_data['NPX']

# %% ../pb_parkinsons_progression_1.ipynb 22
# Merge the protein-level data with the preprocessed clinical data
merged_data = preprocessed_data.merge(merged_protein_data, on=['patient_id', 'visit_month'])
